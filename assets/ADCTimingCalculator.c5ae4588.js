import{a as z,A as q,j as h,k as b,i as t,b as r,d as N,t as s}from"./index.abf51158.js";import{F as i}from"./FormRow.7ca19c31.js";import{I as u}from"./Input.4ebe9e2b.js";const $=s('<div class="input-group"><span class="input-group-text">Hz</span></div>'),v=s('<div class="form-text mb-1"></div>'),F=s('<button class="btn btn-outline-dark btn-sm me-1">MHz</button>'),y=s('<div class="input-group"><span class="input-group-text">cycles</span></div>'),T=s('<div class="form-text mb-1">T<sub>conv</sub> h\xE4ngt von der Aufl\xF6sung ab und ist vergleichbar. 12 bits Aufl\xF6sung entsprechen idr. 12 ADCCLK cycles.</div>'),x=s('<div class="input-group"><span class="input-group-text">\u03BCs</span></div>'),A=s("<div><h1>ADC Timing</h1><form><hr><hr></form></div>"),k=s("<span>T<sub>total</sub></span>"),M=()=>{const[n,C]=z(q.new()),a=(p,d)=>{C(n()[p](d))},f=h(()=>b.from_hertz(n().input_frequency)),g=h(()=>b.from_hertz(n().prescaled_frequency()));return(()=>{const p=A.cloneNode(!0),d=p.firstChild,c=d.nextSibling,m=c.firstChild,_=m.nextSibling;return t(c,r(i,{label:"Eingabefrequenz",labelFor:"hertz",get children(){return[(()=>{const e=$.cloneNode(!0),l=e.firstChild;return t(e,r(u,{type:"number",autocomplete:"off",class:"form-control",id:"hertz",value:()=>n().input_frequency,preprocess:parseInt,onChange:o=>a("updated_input_frequency",o)}),l),e})(),(()=>{const e=v.cloneNode(!0);return t(e,()=>`= ${f().megahertz()} MHz, ${f().kilohertz()} kHz`),e})(),(()=>{const e=F.cloneNode(!0);return e.$$click=()=>a("updated_input_frequency",n().input_frequency*1e6),e})()]}}),m),t(c,r(i,{label:"Prescaler",labelFor:"prescaler",get children(){return r(u,{type:"number",autocomplete:"off",class:"form-control",id:"prescaler",value:()=>n().prescaler,preprocess:parseInt,onChange:e=>a("updated_prescaler",e)})}}),m),t(c,r(i,{label:"= ADCCLK",labelFor:"prescaled_frequency",get children(){return[(()=>{const e=$.cloneNode(!0),l=e.firstChild;return t(e,r(u,{class:"form-control",type:"text",autocomplete:"off",id:"prescaled_frequency",value:()=>n().prescaled_frequency(),preprocess:parseInt,onChange:o=>a("updated_prescaled_frequency",o)}),l),e})(),(()=>{const e=v.cloneNode(!0);return t(e,()=>`= ${g().megahertz()} MHz, ${g().kilohertz()} kHz`),e})()]}}),_),t(c,r(i,{label:"Sampling Time",labelFor:"sample_time_cycles",get children(){const e=y.cloneNode(!0),l=e.firstChild;return t(e,r(u,{type:"number",autocomplete:"off",class:"form-control",id:"sample_time_cycles",value:()=>n().sample_time_cycles,preprocess:parseInt,onChange:o=>a("updated_sample_time_cycles",o)}),l),e}}),_),t(c,r(i,{label:"Conversion Time",labelFor:"conversion_time_cycles",get children(){return[(()=>{const e=y.cloneNode(!0),l=e.firstChild;return t(e,r(u,{type:"number",autocomplete:"off",class:"form-control",id:"conversion_time_cycles",value:()=>n().conversion_time_cycles,preprocess:parseInt,onChange:o=>a("updated_conversion_time_cycles",o)}),l),e})(),T.cloneNode(!0)]}}),_),t(c,r(i,{get label(){return k.cloneNode(!0)},labelFor:"total_time",get children(){const e=x.cloneNode(!0),l=e.firstChild;return t(e,r(u,{type:"number",autocomplete:"off",class:"form-control",id:"total_time",readOnly:!0,value:()=>n().total_time().microseconds(),onChange:o=>{}}),l),e}}),null),p})()};N(["click"]);export{M as default};
