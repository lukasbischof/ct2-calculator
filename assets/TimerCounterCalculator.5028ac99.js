import{a as N,m as M,j as f,k as h,i as r,b as n,S as R,d as H,t as u}from"./index.16ac85fd.js";import{F as p}from"./FormRow.5652b65e.js";import{I as c}from"./Input.e8cf11c5.js";const y=u('<div class="input-group"><span class="input-group-text">Hz</span></div>'),q=u('<div class="form-text mb-1"></div>'),S=u('<button class="btn btn-outline-dark btn-sm me-1">MHz</button>'),z=u('<div class="form-text"></div>'),w=u('<div class="row"><div class="col-6"><div class="input-group"><span class="input-group-text">ms</span></div></div><div class="col-6"><div class="input-group"><span class="input-group-text">Hz</span></div></div></div>'),P=u('<div><h1 class="mb-2">Timer / Counter</h1><small class="text-muted mb-3 d-block">TIM3 und TIM4 sind dabei 16-bit Timer und TIM2 sowie TIM5 32-bit</small><form><hr><hr></form></div>'),B=()=>{const[t,x]=N(M.new()),l=(d,_)=>{x(t()[d](_))},$=f(()=>h.from_hertz(t().input_frequency)),g=f(()=>h.from_hertz(t().prescaled_frequency())),b=f(()=>h.from_hertz(t().interrupt_frequency()));return(()=>{const d=P.cloneNode(!0),_=d.firstChild,I=_.nextSibling,o=I.nextSibling,m=o.firstChild,v=m.nextSibling;return r(o,n(p,{label:"Eingabefrequenz",labelFor:"hertz",get children(){return[(()=>{const e=y.cloneNode(!0),s=e.firstChild;return r(e,n(c,{type:"number",class:"form-control",id:"hertz",value:()=>t().input_frequency,preprocess:parseInt,onChange:i=>l("updated_input_frequency",i)}),s),e})(),(()=>{const e=q.cloneNode(!0);return r(e,()=>`= ${$().megahertz()} MHz, ${$().kilohertz()} kHz`),e})(),(()=>{const e=S.cloneNode(!0);return e.$$click=()=>l("updated_input_frequency",t().input_frequency*1e6),e})()]}}),m),r(o,n(p,{label:"Prescaler",labelFor:"prescaler",get children(){return n(c,{type:"number",class:"form-control",id:"prescaler",value:()=>t().prescaler,preprocess:parseInt,onChange:e=>l("updated_prescaler",e)})}}),m),r(o,n(p,{label:"= Prescaled Frequency",labelFor:"prescaled_frequency",get children(){return[(()=>{const e=y.cloneNode(!0),s=e.firstChild;return r(e,n(c,{class:"form-control",type:"text",id:"prescaled_frequency",value:()=>t().prescaled_frequency(),preprocess:parseInt,onChange:i=>l("updated_prescaled_frequency",i)}),s),e})(),(()=>{const e=q.cloneNode(!0);return r(e,()=>`= ${g().megahertz()} MHz, ${g().kilohertz()} kHz`),e})()]}}),v),r(o,n(p,{label:"Auto Reload Register ARR",labelFor:"arr",get children(){return[n(c,{type:"number",class:"form-control",id:"arr",value:()=>t().arr,preprocess:parseInt,onChange:e=>l("updated_arr",e)}),(()=>{const e=z.cloneNode(!0);return r(e,()=>`Effektiv im ARR Register = ${t().arr_register_value()}`),e})()]}}),v),r(o,n(p,{label:"= Interrupt Period",labelFor:"interrupt_period",get children(){const e=w.cloneNode(!0),s=e.firstChild,i=s.firstChild,k=i.firstChild,F=s.nextSibling,C=F.firstChild,T=C.firstChild;return r(i,n(c,{class:"form-control",type:"text",id:"interrupt_period",value:()=>t().interrupt_period_ms(),preprocess:parseInt,onChange:a=>{l("updated_interrupt_period",a)}}),k),r(s,n(R,{get when(){return b().seconds()!==1/0},get children(){const a=z.cloneNode(!0);return r(a,()=>`= ${b().seconds()}s`),a}}),null),r(C,n(c,{class:"form-control",type:"text",id:"interrupt_period",value:()=>t().interrupt_frequency(),preprocess:parseInt,onChange:a=>{l("updated_interrupt_frequency",a)}}),T),e}}),null),d})()};H(["click"]);export{B as default};
